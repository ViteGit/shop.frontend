# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    numberOfLinesPerPage: 30
    adminEmail: 'brain22@inbox.ru'
    freeDeliveryFrom: '%env(FREE_DELIVERY_FROM)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $projectDir: '%kernel.project_dir%'
            $publicDir: '%kernel.project_dir%/public'
            $sessionKeyName: 'CTOKEN'
            $adminEmail: '%adminEmail%'
            $senderEmail: '%env(SMTP_USER)%'
            $senderEncryption: '%env(SMTP_ENCRYPTION)%'
            $senderHost: '%env(SMTP_HOST)%'
            $senderPassword: '%env(SMTP_PASS)%'
            $senderPort: '%env(SMTP_PORT)%'
            $shopName: '%env(SHOP_NAME)%'
            $dsPlatformaApi: '%env(DS_PLATFORMA_API)%'
            $testMode: '%env(TEST_MODE)%'
            $bonusInterestRate: '%env(BONUS_INTEREST_RATE)%'
            $password1: '%env(PASSWORD_1)%'
            $password2: '%env(PASSWORD_2)%'
            $robokassaMerchantLogin: '%env(MERCHANT_LOGIN)%'
            $freeDeliveryFrom: '%freeDeliveryFrom%'
            $numberOfLinesPerPage: '%numberOfLinesPerPage%'
            $botApiKey: '%env(BOT_API_KEY)%'
            $botUsername: '%env(BOT_USERNAME)%'
            $chatId: '%env(CHAT_ID)%'
            $sitename: '%env(SITENAME)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,DTO,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\EventListener\LoginListener:
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }